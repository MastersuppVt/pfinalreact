{"ast":null,"code":"import { TYPES } from \"../actions/shoppingAction\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { CartContext } from \"../components/CartContext\";\nexport const shoppingInitialState = {\n  products: [{\n    id: 1,\n    name: \"Producto 1\",\n    price: 100\n  }, {\n    id: 2,\n    name: \"Producto 2\",\n    price: 200\n  }, {\n    id: 3,\n    name: \"Producto 3\",\n    price: 300\n  }, {\n    id: 4,\n    name: \"Producto 4\",\n    price: 400\n  }, {\n    id: 5,\n    name: \"Producto 5\",\n    price: 500\n  }, {\n    id: 6,\n    name: \"Producto 6\",\n    price: 600\n  }],\n  cart: []\n};\nexport function shoppingReducer(state, action) {\n  // const[char,setChar]= useContext(CartContext);\n  switch (action.type) {\n    case TYPES.ADD_TO_CART:\n      {\n        let newItem = state.products.find(product => product.id === action.payload); //console.log(newItem);\n\n        let itemInCart = state.cart.find(item => item.id === newItem.id);\n        return itemInCart ? { ...state,\n          cart: state.cart.map(item => item.id === newItem.id ? { ...item,\n            quantity: item.quantity + 1\n          } : item)\n        } : { ...state,\n          cart: [...state.cart, { ...newItem,\n            quantity: 1\n          }]\n        };\n      }\n\n    case TYPES.REMOVE_ONE_FROM_CART:\n      {\n        let itemToDelete = state.cart.find(item => item.id === action.payload);\n        return itemToDelete.quantity > 1 ? { ...state,\n          cart: state.cart.map(item => item.id === action.payload ? { ...item,\n            quantity: item.quantity - 1\n          } : item)\n        } : { ...state,\n          cart: state.cart.filter(item => item.id !== action.payload)\n        };\n      }\n\n    case TYPES.REMOVE_ALL_FROM_CART:\n      {\n        return { ...state,\n          cart: state.cart.filter(item => item.id !== action.payload)\n        };\n      }\n\n    case TYPES.CLEAR_CART:\n      return shoppingInitialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Mastersupp/Desktop/Proyecto final React/pfreact/src/reducers/shoppingReducer.js"],"names":["TYPES","React","useState","useEffect","useContext","axios","CartContext","shoppingInitialState","products","id","name","price","cart","shoppingReducer","state","action","type","ADD_TO_CART","newItem","find","product","payload","itemInCart","item","map","quantity","REMOVE_ONE_FROM_CART","itemToDelete","filter","REMOVE_ALL_FROM_CART","CLEAR_CART"],"mappings":"AAAA,SAASA,KAAT,QAAsB,2BAAtB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,OAAO,MAAMC,oBAAoB,GAAG;AAClCC,EAAAA,QAAQ,EAAE,CACR;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,YAAf;AAA6BC,IAAAA,KAAK,EAAE;AAApC,GADQ,EAER;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,YAAf;AAA6BC,IAAAA,KAAK,EAAE;AAApC,GAFQ,EAGR;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,YAAf;AAA6BC,IAAAA,KAAK,EAAE;AAApC,GAHQ,EAIR;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,YAAf;AAA6BC,IAAAA,KAAK,EAAE;AAApC,GAJQ,EAKR;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,YAAf;AAA6BC,IAAAA,KAAK,EAAE;AAApC,GALQ,EAMR;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,YAAf;AAA6BC,IAAAA,KAAK,EAAE;AAApC,GANQ,CADwB;AASlCC,EAAAA,IAAI,EAAE;AAT4B,CAA7B;AAWP,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,MAAhC,EAAwC;AAC7C;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,KAAK,CAACiB,WAAX;AAAwB;AACtB,YAAIC,OAAO,GAAGJ,KAAK,CAACN,QAAN,CAAeW,IAAf,CACXC,OAAD,IAAaA,OAAO,CAACX,EAAR,KAAeM,MAAM,CAACM,OADvB,CAAd,CADsB,CAItB;;AAEA,YAAIC,UAAU,GAAGR,KAAK,CAACF,IAAN,CAAWO,IAAX,CAAiBI,IAAD,IAAUA,IAAI,CAACd,EAAL,KAAYS,OAAO,CAACT,EAA9C,CAAjB;AAEA,eAAOa,UAAU,GACb,EACE,GAAGR,KADL;AAEEF,UAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWY,GAAX,CAAgBD,IAAD,IACnBA,IAAI,CAACd,EAAL,KAAYS,OAAO,CAACT,EAApB,GACI,EAAE,GAAGc,IAAL;AAAWE,YAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,GAAgB;AAArC,WADJ,GAEIF,IAHA;AAFR,SADa,GASb,EACE,GAAGT,KADL;AAEEF,UAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgB,EAAE,GAAGM,OAAL;AAAcO,YAAAA,QAAQ,EAAE;AAAxB,WAAhB;AAFR,SATJ;AAaD;;AACD,SAAKzB,KAAK,CAAC0B,oBAAX;AAAiC;AAC/B,YAAIC,YAAY,GAAGb,KAAK,CAACF,IAAN,CAAWO,IAAX,CAAiBI,IAAD,IAAUA,IAAI,CAACd,EAAL,KAAYM,MAAM,CAACM,OAA7C,CAAnB;AAEA,eAAOM,YAAY,CAACF,QAAb,GAAwB,CAAxB,GACH,EACE,GAAGX,KADL;AAEEF,UAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWY,GAAX,CAAgBD,IAAD,IACnBA,IAAI,CAACd,EAAL,KAAYM,MAAM,CAACM,OAAnB,GACI,EAAE,GAAGE,IAAL;AAAWE,YAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,GAAgB;AAArC,WADJ,GAEIF,IAHA;AAFR,SADG,GASH,EACE,GAAGT,KADL;AAEEF,UAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWgB,MAAX,CAAmBL,IAAD,IAAUA,IAAI,CAACd,EAAL,KAAYM,MAAM,CAACM,OAA/C;AAFR,SATJ;AAaD;;AACD,SAAKrB,KAAK,CAAC6B,oBAAX;AAAiC;AAC/B,eAAO,EACL,GAAGf,KADE;AAELF,UAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWgB,MAAX,CAAmBL,IAAD,IAAUA,IAAI,CAACd,EAAL,KAAYM,MAAM,CAACM,OAA/C;AAFD,SAAP;AAID;;AACD,SAAKrB,KAAK,CAAC8B,UAAX;AACE,aAAOvB,oBAAP;;AACF;AACE,aAAOO,KAAP;AAjDJ;AAmDD","sourcesContent":["import { TYPES } from \"../actions/shoppingAction\";\nimport React ,{useState, useEffect, useContext} from \"react\";\nimport axios from \"axios\"\nimport { CartContext } from \"../components/CartContext\";\n\nexport const shoppingInitialState = {\n  products: [\n    { id: 1, name: \"Producto 1\", price: 100 },\n    { id: 2, name: \"Producto 2\", price: 200 },\n    { id: 3, name: \"Producto 3\", price: 300 },\n    { id: 4, name: \"Producto 4\", price: 400 },\n    { id: 5, name: \"Producto 5\", price: 500 },\n    { id: 6, name: \"Producto 6\", price: 600 },\n  ],\n  cart: [],\n};\nexport function shoppingReducer(state, action) {\n  // const[char,setChar]= useContext(CartContext);\n  switch (action.type) {\n    case TYPES.ADD_TO_CART: {\n      let newItem = state.products.find(\n        (product) => product.id === action.payload\n      );\n      //console.log(newItem);\n\n      let itemInCart = state.cart.find((item) => item.id === newItem.id);\n\n      return itemInCart\n        ? {\n            ...state,\n            cart: state.cart.map((item) =>\n              item.id === newItem.id\n                ? { ...item, quantity: item.quantity + 1 }\n                : item\n            ),\n          }\n        : {\n            ...state,\n            cart: [...state.cart, { ...newItem, quantity: 1 }],\n          };\n    }\n    case TYPES.REMOVE_ONE_FROM_CART: {\n      let itemToDelete = state.cart.find((item) => item.id === action.payload);\n\n      return itemToDelete.quantity > 1\n        ? {\n            ...state,\n            cart: state.cart.map((item) =>\n              item.id === action.payload\n                ? { ...item, quantity: item.quantity - 1 }\n                : item\n            ),\n          }\n        : {\n            ...state,\n            cart: state.cart.filter((item) => item.id !== action.payload),\n          };\n    }\n    case TYPES.REMOVE_ALL_FROM_CART: {\n      return {\n        ...state,\n        cart: state.cart.filter((item) => item.id !== action.payload),\n      };\n    }\n    case TYPES.CLEAR_CART:\n      return shoppingInitialState;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}