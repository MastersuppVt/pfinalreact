{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mastersupp\\\\Desktop\\\\Proyecto final React\\\\pfreact\\\\src\\\\components\\\\ItemDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport Icount from \"./ItemCount\";\nimport { CartState } from \"./CartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Char = _ref => {\n  _s();\n\n  let {\n    char,\n    cart,\n    setCart,\n    characters\n  } = _ref;\n  const {\n    name,\n    img,\n    status,\n    char_id\n  } = char;\n  const [krt, setKrt, counter, setCounter] = useContext(CartState);\n  const [inCart, setInCart] = useState(0);\n\n  const addChar = id => {\n    if (counter === 0) {\n      const char = characters.filter(char => char.char_id === id);\n      setCart([...cart, ...char]);\n    }\n\n    setCounter(counter + 1);\n    console.log(counter);\n  };\n\n  const del = () => {\n    setCounter(0);\n  };\n\n  const delChar = id => {\n    setCounter(0);\n    const characters = cart.filter(char => char.char_id !== id);\n    setCart(characters);\n    console.log(counter);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 400,\n      height: 600\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/producto/${char.char_id}`,\n        children: /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"360\",\n          image: img,\n          alt: \"green iguana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: characters ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => addChar(char_id),\n          children: \"Agregar +\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => delChar(char_id),\n          children: \"Quitar -\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/producto/${char.char_id}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            children: \"Confirmar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Icount, {\n          cart: cart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this); //   return (\n  //     <ul>\n  //       <img src={img}></img>\n  //       <li>{name}</li>\n  //       <li>{status}</li>\n  //       {characters ? (\n  //         <button\n  //           type=\"button\"\n  //           onClick={() => addChar(char_id)}\n  //         >\n  //           Agregar +\n  //         </button>\n  //       ) : (\n  //         <div>\n  //           <button\n  //             type=\"button\"\n  //             onClick={() => delChar(char_id)}\n  //           >\n  //             Eliminar\n  //           </button>\n  //           <button\n  //             type=\"button\"\n  //             onClick={() => delChar(char_id)}\n  //           >\n  //             Confirmar\n  //           </button>\n  //         </div>\n  //       )}\n  //     </ul>\n  //   );\n};\n\n_s(Char, \"TXSkLT+uvRLCa/V5r+OTMuSggrA=\");\n\n_c = Char;\nexport default Char; // const ItemDetail = () => {\n//     const [counter, setCounter] = useState(1);\n//     const [stock, setStock] = useState(1);\n//     const [producto, setProducto] = useState(1);\n//     useEffect(() => {\n//         itemCount(Number(prompt(\"stock\")), Number(prompt(\"inicial\")))\n//         return () => {\n//             console.log(\"hi\")\n//         };\n//     }, []);\n//     function itemCount(stock, inicial, onAdd) {\n//         var n1 = stock;\n//         var n2 = inicial;\n//         setStock(n1)\n//         setProducto(n2)\n//     }\n//     const onAdd = () => {\n//         if (counter <= stock) {\n//             setProducto(producto + counter)\n//             setStock(stock - counter)\n//             setCounter(0);\n//         }\n//     }\n//     const quitar = () => {\n//         if (producto > 0 && (producto - counter) >= 0) {\n//             setProducto(producto - counter)\n//             setStock(stock + counter)\n//             setCounter(0);\n//         }\n//     }\n//     const handlerCounterUp = () => {\n//         if (counter < stock || producto > stock) {\n//             setCounter(counter + 1);\n//         }\n//     };\n//     const handlerCounterDown = () => {\n//         if (counter > 0) {\n//             setCounter(counter - 1);\n//         }\n//     };\n//     const [characters, setCharacters] = useState([])\n//     let id = useParams().id;\n//     useEffect(() => {\n//         axios(`https://www.breakingbadapi.com/api/characters/${id}`).then((res) => setCharacters(res.data))\n//     }, [id]);\n//     return (\n//         <div>\n//             <div className='CounterSection'>\n//                 <p>Counter: {counter}</p>\n//                 <p>producto: {producto}</p>\n//                 <p>stock: {stock}</p>\n//                 <div className='btn-section'>\n//                     <button onClick={onAdd}>AÃ±adir</button>\n//                     <button onClick={quitar}>quitar</button>\n//                     <button onClick={handlerCounterUp}>Incrementar</button>\n//                     <button onClick={handlerCounterDown}>Decrementar</button>\n//                 </div>\n//             </div>\n//             {\n//                 characters.map((char) => {\n//                     return (\n//                         <div>\n//                             <h1>hola</h1>\n//                             <h1>{char.name}</h1>\n//                             <h2>{char.status}</h2>\n//                             <img src={char.img}></img>\n//                         </div>\n//                     );\n//                 })\n//             }\n//         </div >\n//     )\n// }\n// export default ItemDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Char\");","map":{"version":3,"sources":["C:/Users/Mastersupp/Desktop/Proyecto final React/pfreact/src/components/ItemDetail.js"],"names":["React","useState","useContext","Card","CardActions","CardContent","CardMedia","Typography","CardActionArea","Link","Icount","CartState","Char","char","cart","setCart","characters","name","img","status","char_id","krt","setKrt","counter","setCounter","inCart","setInCart","addChar","id","filter","console","log","del","delChar","width","height"],"mappings":"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AI,EAAC,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEN;AAAd;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBR;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAzBkD,CAoFlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CApHD;;GAAMF,I;;KAAAA,I;AAsHN,eAAeA,IAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport { CardActionArea } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport Icount from \"./ItemCount\";\r\nimport { CartState } from \"./CartContext\";\r\n\r\nconst Char = ({ char, cart, setCart, characters }) => {\r\n    const { name, img, status, char_id } = char;\r\n    const [krt,setKrt,counter, setCounter] = useContext(CartState)\r\n    const [inCart, setInCart] = useState(0)\r\n    const addChar = (id) => {\r\n        if (counter === 0) {\r\n\r\n            const char = characters.filter((char) => char.char_id === id);\r\n            setCart([...cart, ...char]);\r\n\r\n        }\r\n        setCounter(counter + 1)\r\n        console.log(counter);\r\n\r\n    };\r\n    const del = () => {\r\n        setCounter(0)\r\n    }\r\n    const delChar = (id) => {\r\n        setCounter(0)\r\n        const characters = cart.filter((char) => char.char_id !== id);\r\n        setCart(characters);\r\n\r\n        console.log(counter)\r\n    };\r\n    return (\r\n        <Card sx={{ width: 400, height: 600 }}>\r\n            <CardActionArea>\r\n                <Link to={`/producto/${char.char_id}`}>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        height=\"360\"\r\n                        image={img}\r\n                        alt=\"green iguana\"\r\n                    />\r\n                </Link>\r\n\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        {name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {status}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                {characters ? (\r\n                    <div>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => addChar(char_id)}\r\n                        >\r\n                            Agregar +\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => delChar(char_id)}\r\n                        >\r\n                            Quitar -\r\n                        </button>\r\n                    </div>\r\n\r\n                ) : (\r\n                    <div>\r\n                        <Link to={`/producto/${char.char_id}`}>\r\n                            <button\r\n\r\n                                type=\"button\"\r\n\r\n                            >\r\n                                Confirmar\r\n                            </button>\r\n                        </Link>\r\n\r\n                        <Icount cart={cart}/>\r\n                    </div>\r\n\r\n                )}\r\n\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n\r\n    //   return (\r\n    //     <ul>\r\n    //       <img src={img}></img>\r\n    //       <li>{name}</li>\r\n    //       <li>{status}</li>\r\n    //       {characters ? (\r\n    //         <button\r\n    //           type=\"button\"\r\n    //           onClick={() => addChar(char_id)}\r\n    //         >\r\n    //           Agregar +\r\n    //         </button>\r\n    //       ) : (\r\n    //         <div>\r\n    //           <button\r\n\r\n    //             type=\"button\"\r\n    //             onClick={() => delChar(char_id)}\r\n    //           >\r\n    //             Eliminar\r\n    //           </button>\r\n    //           <button\r\n\r\n    //             type=\"button\"\r\n    //             onClick={() => delChar(char_id)}\r\n    //           >\r\n    //             Confirmar\r\n    //           </button>\r\n    //         </div>\r\n    //       )}\r\n    //     </ul>\r\n    //   );\r\n};\r\n\r\nexport default Char;\r\n\r\n// const ItemDetail = () => {\r\n//     const [counter, setCounter] = useState(1);\r\n//     const [stock, setStock] = useState(1);\r\n//     const [producto, setProducto] = useState(1);\r\n//     useEffect(() => {\r\n//         itemCount(Number(prompt(\"stock\")), Number(prompt(\"inicial\")))\r\n//         return () => {\r\n//             console.log(\"hi\")\r\n//         };\r\n//     }, []);\r\n\r\n//     function itemCount(stock, inicial, onAdd) {\r\n//         var n1 = stock;\r\n//         var n2 = inicial;\r\n//         setStock(n1)\r\n//         setProducto(n2)\r\n//     }\r\n//     const onAdd = () => {\r\n\r\n//         if (counter <= stock) {\r\n//             setProducto(producto + counter)\r\n//             setStock(stock - counter)\r\n//             setCounter(0);\r\n//         }\r\n//     }\r\n//     const quitar = () => {\r\n//         if (producto > 0 && (producto - counter) >= 0) {\r\n//             setProducto(producto - counter)\r\n//             setStock(stock + counter)\r\n//             setCounter(0);\r\n//         }\r\n//     }\r\n//     const handlerCounterUp = () => {\r\n//         if (counter < stock || producto > stock) {\r\n//             setCounter(counter + 1);\r\n//         }\r\n//     };\r\n\r\n//     const handlerCounterDown = () => {\r\n//         if (counter > 0) {\r\n//             setCounter(counter - 1);\r\n//         }\r\n\r\n//     };\r\n\r\n//     const [characters, setCharacters] = useState([])\r\n//     let id = useParams().id;\r\n//     useEffect(() => {\r\n//         axios(`https://www.breakingbadapi.com/api/characters/${id}`).then((res) => setCharacters(res.data))\r\n//     }, [id]);\r\n//     return (\r\n//         <div>\r\n//             <div className='CounterSection'>\r\n//                 <p>Counter: {counter}</p>\r\n//                 <p>producto: {producto}</p>\r\n//                 <p>stock: {stock}</p>\r\n//                 <div className='btn-section'>\r\n\r\n//                     <button onClick={onAdd}>AÃ±adir</button>\r\n//                     <button onClick={quitar}>quitar</button>\r\n//                     <button onClick={handlerCounterUp}>Incrementar</button>\r\n//                     <button onClick={handlerCounterDown}>Decrementar</button>\r\n\r\n//                 </div>\r\n//             </div>\r\n//             {\r\n//                 characters.map((char) => {\r\n//                     return (\r\n//                         <div>\r\n//                             <h1>hola</h1>\r\n//                             <h1>{char.name}</h1>\r\n//                             <h2>{char.status}</h2>\r\n//                             <img src={char.img}></img>\r\n\r\n//                         </div>\r\n//                     );\r\n//                 })\r\n//             }\r\n\r\n\r\n//         </div >\r\n//     )\r\n// }\r\n\r\n// export default ItemDetail;"]},"metadata":{},"sourceType":"module"}